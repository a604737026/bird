{"version":3,"sources":["vue-create-api.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["/**\n * vue-create-api v0.2.3\n * (c) 2019 ustbhuangyi\n * @license MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.VueCreateAPI = factory());\n}(this, (function () { \n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var camelizeRE = /-(\\w)/g;\n\n  function camelize(str) {\n    return (str + '').replace(camelizeRE, function (m, c) {\n      return c ? c.toUpperCase() : '';\n    });\n  }\n\n  function escapeReg(str, delimiter) {\n    return (str + '').replace(new RegExp('[.\\\\\\\\+*?\\\\[\\\\^\\\\]$(){}=!<>|:\\\\' + (delimiter || '') + '-]', 'g'), '\\\\$&');\n  }\n\n  function isBoolean(value) {\n    return typeof value === 'boolean';\n  }\n\n  function isUndef(value) {\n    return value === undefined;\n  }\n\n  function isStr(value) {\n    return typeof value === 'string';\n  }\n\n  function isFunction(fn) {\n    return typeof fn === 'function';\n  }\n\n  function assert(condition, msg) {\n    if (!condition) {\n      throw new Error(\"[vue-create-api error]: \" + msg);\n    }\n  }\n\n  function instantiateComponent(Vue, Component, data, renderFn, options) {\n    var renderData = void 0;\n    var childrenRenderFn = void 0;\n\n    var instance = new Vue(_extends({}, options, {\n      render: function render(createElement) {\n        var children = childrenRenderFn && childrenRenderFn(createElement);\n        if (children && !Array.isArray(children)) {\n          children = [children];\n        }\n\n        return createElement(Component, _extends({}, renderData), children || []);\n      },\n\n      methods: {\n        init: function init() {\n          document.body.appendChild(this.$el);\n        },\n        destroy: function destroy() {\n          this.$destroy();\n          if (this.$el && this.$el.parentNode === document.body) {\n            document.body.removeChild(this.$el);\n          }\n        }\n      }\n    }));\n    instance.updateRenderData = function (data, render) {\n      renderData = data;\n      childrenRenderFn = render;\n    };\n    instance.updateRenderData(data, renderFn);\n    instance.$mount();\n    instance.init();\n    var component = instance.$children[0];\n    component.$updateProps = function (props) {\n      _extends(renderData.props, props);\n      instance.$forceUpdate();\n    };\n    return component;\n  }\n\n  function parseRenderData() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var events = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    events = parseEvents(events);\n    var props = _extends({}, data);\n    var on = {};\n    for (var name in events) {\n      if (events.hasOwnProperty(name)) {\n        var handlerName = events[name];\n        if (props[handlerName]) {\n          on[name] = props[handlerName];\n          delete props[handlerName];\n        }\n      }\n    }\n    return {\n      props: props,\n      on: on\n    };\n  }\n\n  function parseEvents(events) {\n    var parsedEvents = {};\n    events.forEach(function (name) {\n      parsedEvents[name] = camelize('on-' + name);\n    });\n    return parsedEvents;\n  }\n\n  var eventBeforeDestroy = 'hook:beforeDestroy';\n\n  function apiCreator(Component) {\n    var events = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var single = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var Vue = this;\n    var singleMap = {};\n    var beforeHooks = [];\n\n    function createComponent(renderData, renderFn, options, single) {\n      beforeHooks.forEach(function (before) {\n        before(renderData, renderFn, single);\n      });\n      var ownerInsUid = options.parent ? options.parent._uid : -1;\n\n      var _ref = singleMap[ownerInsUid] ? singleMap[ownerInsUid] : {},\n          comp = _ref.comp,\n          ins = _ref.ins;\n\n      if (single && comp && ins) {\n        ins.updateRenderData(renderData, renderFn);\n        ins.$forceUpdate();\n        return comp;\n      }\n      var component = instantiateComponent(Vue, Component, renderData, renderFn, options);\n      var instance = component.$parent;\n      var originRemove = component.remove;\n\n      component.remove = function () {\n        if (single) {\n          if (!singleMap[ownerInsUid]) {\n            return;\n          }\n          singleMap[ownerInsUid] = null;\n        }\n        originRemove && originRemove.apply(this, arguments);\n        instance.destroy();\n      };\n\n      var originShow = component.show;\n      component.show = function () {\n        originShow && originShow.apply(this, arguments);\n        return this;\n      };\n\n      var originHide = component.hide;\n      component.hide = function () {\n        originHide && originHide.apply(this, arguments);\n        return this;\n      };\n\n      if (single) {\n        singleMap[ownerInsUid] = {\n          comp: component,\n          ins: instance\n        };\n      }\n      return component;\n    }\n\n    function processProps(ownerInstance, renderData, isInVueInstance, onChange) {\n      var $props = renderData.props.$props;\n      if ($props) {\n        delete renderData.props.$props;\n\n        var watchKeys = [];\n        var watchPropKeys = [];\n        Object.keys($props).forEach(function (key) {\n          var propKey = $props[key];\n          if (isStr(propKey) && propKey in ownerInstance) {\n            // get instance value\n            renderData.props[key] = ownerInstance[propKey];\n            watchKeys.push(key);\n            watchPropKeys.push(propKey);\n          } else {\n            renderData.props[key] = propKey;\n          }\n        });\n        if (isInVueInstance) {\n          var unwatchFn = ownerInstance.$watch(function () {\n            var props = {};\n            watchKeys.forEach(function (key, i) {\n              props[key] = ownerInstance[watchPropKeys[i]];\n            });\n            return props;\n          }, onChange);\n          ownerInstance.__unwatchFns__.push(unwatchFn);\n        }\n      }\n    }\n\n    function processEvents(renderData, ownerInstance) {\n      var $events = renderData.props.$events;\n      if ($events) {\n        delete renderData.props.$events;\n\n        Object.keys($events).forEach(function (event) {\n          var eventHandler = $events[event];\n          if (typeof eventHandler === 'string') {\n            eventHandler = ownerInstance[eventHandler];\n          }\n          renderData.on[event] = eventHandler;\n        });\n      }\n    }\n\n    function process$(renderData) {\n      var props = renderData.props;\n      Object.keys(props).forEach(function (prop) {\n        if (prop.charAt(0) === '$') {\n          renderData[prop.slice(1)] = props[prop];\n          delete props[prop];\n        }\n      });\n    }\n\n    function cancelWatchProps(ownerInstance) {\n      if (ownerInstance.__unwatchFns__) {\n        ownerInstance.__unwatchFns__.forEach(function (unwatchFn) {\n          unwatchFn();\n        });\n        ownerInstance.__unwatchFns__ = null;\n      }\n    }\n\n    var api = {\n      before: function before(hook) {\n        beforeHooks.push(hook);\n      },\n      create: function create(config, renderFn, _single) {\n        if (!isFunction(renderFn) && isUndef(_single)) {\n          _single = renderFn;\n          renderFn = null;\n        }\n\n        if (isUndef(_single)) {\n          _single = single;\n        }\n\n        var ownerInstance = this;\n        var isInVueInstance = !!ownerInstance.$on;\n        var options = {};\n\n        if (isInVueInstance) {\n          // Set parent to store router i18n ...\n          options.parent = ownerInstance;\n          if (!ownerInstance.__unwatchFns__) {\n            ownerInstance.__unwatchFns__ = [];\n          }\n        }\n\n        var renderData = parseRenderData(config, events);\n\n        var component = null;\n\n        processProps(ownerInstance, renderData, isInVueInstance, function (newProps) {\n          component && component.$updateProps(newProps);\n        });\n        processEvents(renderData, ownerInstance);\n        process$(renderData);\n\n        component = createComponent(renderData, renderFn, options, _single);\n\n        if (isInVueInstance) {\n          ownerInstance.$on(eventBeforeDestroy, beforeDestroy);\n        }\n\n        function beforeDestroy() {\n          cancelWatchProps(ownerInstance);\n          component.remove();\n          component = null;\n        }\n\n        return component;\n      }\n    };\n\n    return api;\n  }\n\n  function install(Vue) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$componentPre = options.componentPrefix,\n        componentPrefix = _options$componentPre === undefined ? '' : _options$componentPre,\n        _options$apiPrefix = options.apiPrefix,\n        apiPrefix = _options$apiPrefix === undefined ? '$create-' : _options$apiPrefix;\n\n\n    Vue.createAPI = function (Component, events, single) {\n      if (isBoolean(events)) {\n        single = events;\n        events = [];\n      }\n      var api = apiCreator.call(this, Component, events, single);\n      var createName = processComponentName(Component, {\n        componentPrefix: componentPrefix,\n        apiPrefix: apiPrefix\n      });\n      Vue.prototype[createName] = Component.$create = api.create;\n      return api;\n    };\n  }\n\n  function processComponentName(Component, options) {\n    var componentPrefix = options.componentPrefix,\n        apiPrefix = options.apiPrefix;\n\n    var name = Component.name;\n    assert(name, 'Component must have name while using create-api!');\n    var prefixReg = new RegExp('^' + escapeReg(componentPrefix), 'i');\n    var pureName = name.replace(prefixReg, '');\n    var camelizeName = '' + camelize('' + apiPrefix + pureName);\n    return camelizeName;\n  }\n\n  var index = {\n    install: install,\n    instantiateComponent: instantiateComponent,\n    version: '0.2.3'\n  };\n\n  return index;\n\n})));\n"]}